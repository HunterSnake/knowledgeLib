ubuntu 14.04 
---------------------------------------------------
http://blog.sina.com.cn/s/blog_a6559d920102v7fw.html
如何安装及一些基本配置
*************configuration file****************
/etc/apt/source.list


 文件名+路径                   ：   用途

~/.bashrc    				 :   每个用户都有一个自己的.bashrc文件，在用户的目录下，用来保存改用户的

                       			bash shell信息，每次登录或者打开新的shell时被读取。

~/.profile （~/.bash_profile) :  用于执行当前用户的.bashrc文件，该文件可以设置一些环境变量，用户登录时

                                会执行一次。可以编辑改用户自己专有的shell信息。

/etc/bash.bashrc (bashrc) 	:  用来保存所有用户bash shell信息的文件，bash shell打开的时候会读取。

/etc/profile 				: 用来保存所有用户的环境信息，第一次登录时，改文件被执行，从同目录下

profile.d目录的配置中搜寻shell的设置。

/etc/profile中设定的变量(全局)的可以作用于任何用户,

~/.bashrc等中设定的变量(局部)只能继承/etc/profile中的变量,他们是"父子"关系.
 
~/.profile 是交互式、login 方式进入bash 运行的；
~/.bashrc 是交互式 non-login 方式进入bash 运行的；
通常二者设置大致相同，所以通常profile会调用bashrc。
 
Linux版本：Ubuntu 14.04.

在这个版本下我发现没有.bash_profile这个文件，被.profile代替了。到别的版本上Linux我实验了一下，正好是翻过来的。请大家注意一下。

同样etc目录下没有bashrc这个文件了，被bash.bashrc文件代替了。

----------------------------------------------
user&auth management

su + username, switch to the other user
exit back to the preview user

------------------------------------------------
***************tools*************************
type 命令 查看命令的来源
tee 分流
条件执行 
command1 && command2 
command1 || command2

history 输入命令的历史列表
fc -s 重新执行上一条命令
fc -s no 重新执行编号的命令
fs -s pattern=replacement no 替换编号命令中的内容并执行


------------------------------------------------
process

echo $$ #show current shell process Id
command + & run task at background
^Z pause the task 
jobs check the job list
fg [%jobNo] move the background task to stage
bg move the stage task to background

ps process status
ps [-aetfFly] [-p pid] [-u userid]
default show current user's process
-a all exclude the daemon process
-e include daemon process
-p pid the process about of the pid
-u userid the process about of the userid
-t only show daemon process
-fFly show diff fields for process list


-------------------------------------------------
***************文件系统*************************
/usr 静态数据使用的文件系统
/var 可变数据使用的文件系统
/etc 配置文件
/lib 共享库
/opt 第三方应用程序（“可选软件”）

/usr/bin 非基本程序（大多数用户程序）
/usr/include C程序的头文件
/usr/lib 非基本共享库
/usr/local 本地安装程序
/usr/share	共享系统数据
/usr/src 	源代码

cd 将切换到Home 目录
cd - 将回到上个目录

mkdir -p directory 自动创建父目录
rmdir 不能删除非空目录 工作目录和根目录之间的目录
rmdir -p essays/history/roman/unix/research 一次性删除目录树上的所有目录 但是目录树上不能有其他分支或者叶子

pushd [+num] 压入目录栈 小于num的目录在目录栈中移动
popd 弹出栈 工作目录转移到 栈[1]
popd [+num] 从栈中删除制定的目录 工作目录不变
dirs 显示目录栈
dirs -c 清空目录栈sudo

ls -CrR1
ls | wc -l 子节点数量（包括分支和叶子）
ls -C 以列的方式输出到管道线
ls -1 每个文件占一行输出
ls -r (reverse)以相反的顺序输出
ls -R (recursive)递归 显示整个目录树 
ls -F 文件类型 空：普通文件，不可执行 *:普通可执行文件 /目录 @符号链接 |命名管道
ls --color 用颜色标识不同的文件
ls -s size 文件大小
ls h* 匹配一组h开头的文件名 ? 单个字符 [lsit] [^list] {string1|string2}
ls -a 显示隐藏文件 .文件
ls -i 显示i节点编号

cat mkdir touch 也可以使用{}扩展用法同ls


file 文件类型

du [-achs] disk usage 显示文件大小 -h human readable  -s sum
sudo du / -hs 2>/dev/null 显示总磁盘使用 并重定向错误到位桶

df disk free-sapce

quota 用户配额

*****************文件操作***********************
touch 改变文件的修改时间和访问时间
touch [-acm] [-t time] file..... -m 只改变修改时间 -a 只改变访问时间
time 的格式是 [[YY|YY|MMDDhhmm[.ss]]]
使用touch 的副作用(文件不存在则)创建文件
-c 文件不存在则不创建新文件

cp -i: (interactive) 替换之前询问 -p (preserve) 目标文件与源文件有相同的修改，访问时间 权限
*.[]{} 通配符cp 可用
cp data[123] backups 拷贝3个文件到目录
cp -r (recursive) diretory1 diretory2 将一个目录及其所有文件拷贝到另一个目录
cp docuemnts/* backups 利用通配符拷贝目录中的文件到另一个目录

mv -i -f force 移动或者重命名
rm 删除文件 -r recursive 删除整个目录树

cat 追加文件

ln file newname 链接新名字到同一文件

whereis 显示命令相关的文件
locate 搜索特定模式的文件数据库
locate -r 正则 -c count 总数 -i ignorecase 忽略大小写 -b 匹配文件名（基名） -S locate数据库的信息

find path... test... action....
test...
-name pattern 文件名
-iname pattern 不区分大小写
-type [df]	d 目录 f 普通文件
-user userid	属主
-size [-+]n[cbkMG] 大小为 n [字节，块，千字节, 兆字节, 吉字节]
-amin [-+]n 	n分钟之前访问
-anewer file 	file文件之后访问
-atime [-+]n 	n天之前访问
-cmin [-+]n 	n分钟之前状态改变
-cnewer file 	file 文件之后状态改变
-mmin [-+]n 	n分钟之前修改
-mtime [-+]n 	n天之前修改
-newer file 	file 文件之后修改

find ~ -type f -size +100M -print 查找大于100M的文件
! 求反
find ~ \! -type f \! -type d -print 既不是普通文件也不是目录的文件， 符号链接 命名管道 特殊文件等

action...
-print 写入标准输出
-fprint file 输出写入file
-ls 显示长目录列表
-fls file
-delete 删除
-exec command {} \; 执行command， {}指示匹配的文件名
-ok command {} \; 同 -exec 但是运行之前需要确认
xargs 处理管道输入 并使用 参数指定的命令 执行

find ~ -type f -mtime +365 | xargs grep "hunter huang" 查找当前用户的Home目录中 修改时间超过365天的文件 传送给grep 在其中查找包含 "hunter huang" 的行
-i {} 占位符
find . -type f | xargs -i mv {} ~/backups/{}.old 找到移动并重命名加 old



------------------------------------------------
**********************************************
sublimeText 3 for input chinese
http://blog.csdn.net/cywosp/article/details/32350899
*************************************************
git install and how to use
http://www.cnblogs.com/jackge/archive/2013/08/17/3264801.html
************************************************

**********others************************
^l clean screen, move screen to blank

sudo rmmod psmouse 禁用触摸板
sudo modprobe psmouse 启用触摸板

------------------------------------------------
*******************alias***************************
alias del='fc -s ls=rm' 使用别名来明确安全的删除文件